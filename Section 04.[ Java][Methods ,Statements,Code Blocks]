package com.company;

public class Main {


    public static void main(String[] args) {

        int rank = calculateHighScorePosition(1500);
        displayHighScorePosition(rank, "Rat");
        rank = calculateHighScorePosition(900);
        displayHighScorePosition(rank, "Tim");
        rank = calculateHighScorePosition(400);
        displayHighScorePosition(rank, "Cube");
        rank = calculateHighScorePosition(50);
        displayHighScorePosition(rank, "Leina");
        rank=calculateHighScorePosition(1000);
        displayHighScorePosition(rank,"Alex");
    }

    public static void displayHighScorePosition(int rank, String name) {
        System.out.println(name  +  " Managed to Get this Rank : " + rank );
    }

    public static int calculateHighScorePosition(int Score) {


        int Position;
        if (Score >= 1000) {
            Position = 1;
        } else if ((Score >= 500) && (Score < 1000)) {
            Position = 2;
        } else if ((Score >= 100) && (Score < 500)) {
            Position = 3;
        } else {
            Position = 4;
        }
        return Position;
    }

}

//CODING EXERCISE 1.
package com.company;

public class SpeedConverter {
    public static long toMilesPerHour(double kilometersPerHour){
        if(kilometersPerHour<0){
            return -1;
        }
        return Math.round(kilometersPerHour/1.609);

    }
    public static void printConversion(double kilometersPerHour){
        if(kilometersPerHour<0){
            System.out.print("Invalid Value");
        }else {
           long milesPerHour=toMilesPerHour(kilometersPerHour);{
                System.out.println(kilometersPerHour + " km/h = " + milesPerHour + " mi/h ");

            }
        }
    }
}
//CODING EXERCISE 2
public class MegaBytesConverter {
    public static void printMegaBytesAndKiloBytes(int kiloBytes){

        if(kiloBytes<0){
            System.out.println("Invalid Value");
        }
        else{
            System.out.println(kiloBytes + " KB = " + (kiloBytes/1024) + " MB and " + (kiloBytes % 1024) + " KB");
        }
    }
}
//CODDING EXERCISE 3
public class BarkingDog {
    public static boolean shouldWakeUp(boolean barking ,int hourOfDay) {
        if ((hourOfDay <= 23) && (hourOfDay >= 0)) {
            if (((hourOfDay <= 7) || (hourOfDay >= 23)) && (barking == true)) {
                return true;
            }else{
                return false;
            }
        } else {
            return false;
        }


    }}
    
//CODING EXERCISE 4
public class LeapYear {
    public static boolean isLeapYear(int year) {
        if ((year >= 1) && (year <= 9999)) {
            if (year % 4 == 0) {
                if (year % 100 == 0) {

                }
                else
                    return true;
                        if (year     % 400 == 0) {
                    return true;
                } else return false;

            } else return false;
        } else {
            return false;
        }
    }

}
//CODING EXERCISE 6
public class hasEqualSum {
    public static boolean hasEqualSum (int a,int b,int c){
        int d=a+b;
        if(d==c){
            return true;
        }
        else
            return false;
    }


}
//CODING EXERCISE 7
public class TeenNumberChecker {
    public static boolean hasTeen(int a,int b, int c){
  if((a>=13 && a<=19)||(b>=13 && b<=19)||(c>=13 && c<=19)){
      return true;
  }
  else
      return false;
}
public static boolean isTeen(int a){
    if(a>=13 && a<=19){
        return true;
    }
    else return false;
}

}


TRANSFORM INCHES & FEET TO CENTIMETERS.
package com.company;

public class Main {


    public static void main(String[] args) {
double answer=calcFeetAndInchesToCentimeters(12,5);
System.out.println(answer);
double answerinc=calcFeetAndInchesToCentimeters(25);
System.out.println(answerinc);

    }






    public static double calcFeetAndInchesToCentimeters(double feet,double inches){
    if((feet >= 0) && (inches >=0 && inches <=12)){

        double centimeters=(feet*2.54*12)+(inches * 2.54);
        return centimeters;
    }
    else return -1;

}
public static double calcFeetAndInchesToCentimeters(double inches){
        if (inches>=0){
            double feet = (int)inches/12;
            inches %=12;
          double var= calcFeetAndInchesToCentimeters(feet,inches);
          return var;
    }
        else return -1;
}}


HOURS MINUTES AND SECOND CHALLEGE

    public static void main(String[] args) {
String Answer=SecondAndMinutes(5000,3);
System.out.println(Answer);
Answer=SecondAndMinutes(5000);
System.out.println(Answer);
    }



public static String SecondAndMinutes(int seconds,int minutes){
        minutes=(seconds/60)+minutes;
        int hours = minutes/60;
        seconds %=60;
        minutes %=60;
        String reputation = "Hours : "+hours + " Minutes : " +  minutes + " Seconds " + seconds;
    return reputation;
}
public static String SecondAndMinutes(int seconds){
        int minutes= seconds/60;
        seconds %=60;
        String reputation= SecondAndMinutes(seconds,minutes);
        return reputation;
}
}
//CODING EXERCISE 8


public class AreaCalculator {
    public static double area ( double radius){

        if(radius <0){
            return -1;
        }
        else{
            double value=radius*radius*Math.PI;
            return value;
        }}
    public static double area(double x,double y){
        if ((x<0)  || (y<0)){
            return -1;
        }
        else {
            double value = x*y;
            return value;
        }
    }

}
//CODING EXERCISE 9(POW)
public class MinutesToYearsDaysCalculator {
    public static void printYearsAndDays(long minutes){
        if (minutes <0){
            System.out.println("Invalid Value");
        }
        else{
                long days=minutes/1440;
                long years=(int)days/365;
                days%=365;
                System.out.println(minutes+" min= " + years +" y and "+days+" d");
        }
    }
}
//CODING EXERCISE 10
public class IntEqualityPrinter {

        public static void printEqual(int a,int b, int c){
            if((a<0)||(b<0)||(c<0)){
                System.out.println("Invalid Value");
            }
            else{
                if((a==b)&&(a==c)){
                    System.out.println("All numbers are equal");

                }
                else if((a==b)||(a==c)||(c==b)){
                    System.out.println("Neither all are equal or different");
                }
                else{
                    System.out.println("All numbers are different");
                }

            }
        }
    }
    //CODING EXERCISE 11
    public class PlayingCat {

    public static boolean isCatPlaying(boolean summer , int temperature){
        if(summer==true){
            if((temperature>=25)&&(temperature<=45)){
                return true;
            }
            else return false;

        }
        else {
            if((temperature>=25)&&(temperature<=35)){
                return true;
            }
            else return false;
        }
    }
}
